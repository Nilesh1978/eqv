library(eqv)
filename <- system.file("extdata/signif.txt", package = "eqv")
data <- readr::read_delim(filename, delim = "\t")
library(testthat)
test_that("eq_clean_data returns data frame", {
expect_is(eq_clean_data(data), "data.frame")
})
expect_is(eq_clean_data(data)$DATE, "Date")
test_that("eq_clean_data$DATE is Date type", {
expect_is(eq_clean_data(data)$DATE, "Date")
})
test_that("eq_clean_data$DATE is Date type", {
expect_is(eq_clean_data(data)$DATE, "Chr")
})
test_that("eq_clean_data$DATE is Date type", {
expect_is(eq_clean_data(data)$DATE, "Date")
})
est_that("geom_timeline_label returns ggplot object", {
g <- data %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("GREECE", "ITALY"), YEAR > 2000) %>%
ggplot2::ggplot(ggplot2::aes(x = DATE,
y = COUNTRY,
color = as.numeric(TOTAL_DEATHS),
size = as.numeric(EQ_PRIMARY)
)) +
geom_timeline_label(aes(label = LOCATION_NAME))
expect_is(g, "ggplot")
})
test_that("geom_timeline_label returns ggplot object", {
g <- data %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("GREECE", "ITALY"), YEAR > 2000) %>%
ggplot2::ggplot(ggplot2::aes(x = DATE,
y = COUNTRY,
color = as.numeric(TOTAL_DEATHS),
size = as.numeric(EQ_PRIMARY)
)) +
geom_timeline_label(aes(label = LOCATION_NAME))
expect_is(g, "ggplot")
})
library(eqv)
eq_clean_data
library(ggplot2)
test_that("theme_timeline returns ggplot object", {
g <- data %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("GREECE", "ITALY"), YEAR > 2000) %>%
ggplot2::ggplot(ggplot2::aes(x = DATE,
y = COUNTRY,
color = as.numeric(TOTAL_DEATHS),
size = as.numeric(EQ_PRIMARY)
)) +
theme_timeline()
expect_is(g, "ggplot")
})
