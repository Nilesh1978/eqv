{
    "collab_server" : "",
    "contents" : "#' Clean source data from NOAA\n#'\n#' \\code{eq_clean_data} generate dates, & format latitude and longitude columns\n#'\n#' @param data A data frame with raw data obtained from NOAA website (see below)\n#'\n#' @return A data frame date & nyumeric latitude, longitude variables\n#'\n#' @details The function requires raw date obtained from NOAA site\n#' \\url{https://www.ngdc.noaa.gov/nndc/struts/form?t=101650&s=1&d=1}. It adds\n#' a column DATE with cleaned date (Date format), transforms LATITUDE and\n#' LONGITUDE columns as numeric objects\n#'\n#' @examples\n#' \\dontrun{\n#' data <- readr::read_delim(\"signif.txt\", delim = \"\\t\")\n#' clean_data <- eq_clean_data(data)\n#' }\n#'\n#' @importFrom dplyr %>% mutate select\n#' @importFrom chron julian\n#'\n#' @export\neq_clean_data<- function(dataset){\n\n  # create DATE column by combining year, month, & day cols\n  dataset2<- dataset %>%\n    dplyr::mutate(MONTH = ifelse(is.na(MONTH), 1, MONTH),\n                  DAY = ifelse(is.na(DAY), 1, DAY),\n                  julian_days = chron::julian(MONTH, DAY, YEAR),\n                  DATE = as.Date(julian_days, origin = \"1970-01-01\"),\n                  LATITUDE = as.numeric(LATITUDE),\n                  LONGITUDE = as.numeric(LONGITUDE)) %>%\n    dplyr::select(I_D, FLAG_TSUNAMI, DATE, everything()) %>%\n    dplyr::select(-julian_days)\n\n}\n\n#' Cleans earthquake location data\n#'\n#' @param data A data frame with raw data obtained from NOAA website\n#'\n#' @return A data frame with cleaned LOCATION_NAME column\n#'\n#' @details This function transforms NOAA data frame LOCATION_NAME column by\n#' trimming the country name (if applicable) and converting to title case\n#'\n#' @note The function is not exported\n#'\n#' @examples\n#' \\dontrun{\n#' data <- readr::read_delim(\"earthquakes.tsv.gz\", delim = \"\\t\")\n#' clean_data <- eq_location_clean(data)\n#' }\n#'\n#' @importFrom dplyr %>% mutate\n#' @importFrom stringr str_to_title\n#' @export\neq_location_clean<- function(dataset){\n\n  # clean up location names\n  dataset2<- dataset %>%\n    dplyr::mutate(LOCATION_NAME = gsub(\"^.*:\\\\s*\", \"\",LOCATION_NAME),\n                  LOCATION_NAME = stringr::str_to_title(LOCATION_NAME))\n\n}\n",
    "created" : 1520545567745.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "785302757",
    "id" : "98DA336D",
    "lastKnownWriteTime" : 1520547385,
    "last_content_update" : -2147483648,
    "path" : "C:/Users/nndigh/Desktop/Educational/coursera/Mastering Software Development in R/CAPSTONE/package/eqv/R/data_cleanup.R",
    "project_path" : "R/data_cleanup.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}