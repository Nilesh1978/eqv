{
    "collab_server" : "",
    "contents" : "library(testthat)\nfilename <- system.file(\"extdata/earthquakes.tsv.gz\", package = \"earthquakeVis\")\ndata <- readr::read_delim(filename, delim = \"\\t\")\n\ntest_that(\"eq_clean_data returns data frame\", {\n  expect_is(eq_clean_data(data), \"data.frame\")\n})\n\ntest_that(\"eq_clean_data$DATE is Date type\", {\n  expect_is(eq_clean_data(data)$DATE, \"Date\")\n})\n\ntest_that(\"eq_clean_data returns numeric coordinates\", {\n  expect_is(eq_clean_data(data)$LATITUDE, \"numeric\")\n  expect_is(eq_clean_data(data)$LONGITUDE, \"numeric\")\n})\n\ntest_that(\"eq_location_clean returns a data frame\", {\n  expect_is(eq_location_clean(data), \"data.frame\")\n})\n\ntest_that(\"geom_timeline returns ggplot object\", {\n  g <- data %>% eq_clean_data() %>%\n    dplyr::filter(COUNTRY %in% c(\"GREECE\", \"ITALY\"), YEAR > 2000) %>%\n    ggplot2::ggplot(ggplot2::aes(x = DATE,\n                                 y = COUNTRY,\n                                 color = as.numeric(TOTAL_DEATHS),\n                                 size = as.numeric(EQ_PRIMARY)\n    )) +\n    geom_timeline()\n  expect_is(g, \"ggplot\")\n})\n\ntest_that(\"geom_timeline_label returns ggplot object\", {\n  g <- data %>% eq_clean_data() %>%\n    dplyr::filter(COUNTRY %in% c(\"GREECE\", \"ITALY\"), YEAR > 2000) %>%\n    ggplot2::ggplot(ggplot2::aes(x = DATE,\n                                 y = COUNTRY,\n                                 color = as.numeric(TOTAL_DEATHS),\n                                 size = as.numeric(EQ_PRIMARY)\n    )) +\n    geom_timeline_label(aes(label = LOCATION_NAME))\n  expect_is(g, \"ggplot\")\n})\n\ntest_that(\"theme_timeline returns ggplot object\", {\n  g <- data %>% eq_clean_data() %>%\n    dplyr::filter(COUNTRY %in% c(\"GREECE\", \"ITALY\"), YEAR > 2000) %>%\n    ggplot2::ggplot(ggplot2::aes(x = DATE,\n                                 y = COUNTRY,\n                                 color = as.numeric(TOTAL_DEATHS),\n                                 size = as.numeric(EQ_PRIMARY)\n    )) +\n    theme_timeline()\n  expect_is(g, \"ggplot\")\n})\n\ntest_that(\"eq_map returns leaflet object\", {\n  l <- data %>%\n    eq_clean_data() %>%\n    dplyr::filter(COUNTRY == \"MEXICO\" & lubridate::year(DATE) >= 2000) %>%\n    dplyr::mutate(popup_text = eq_create_label(.)) %>%\n    eq_map(annot_col = \"popup_text\")\n  expect_is(l, \"leaflet\")\n})\n\ntest_that(\"eq_create_label returns character vector\", {\n  expect_is(eq_create_label(data), \"character\")\n})\n\ntest_that(\"eq_create_label has the same length as input df\", {\n  expect_equal(length(eq_create_label(data)), dim(data)[1])\n})\n",
    "created" : 1520684280553.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1573936640",
    "id" : "BFCBA813",
    "lastKnownWriteTime" : 1520684955,
    "last_content_update" : -2147483648,
    "path" : "C:/Users/nndigh/Desktop/Educational/coursera/Mastering Software Development in R/CAPSTONE/package/eqv/tests/test_functions.R",
    "project_path" : "tests/test_functions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}